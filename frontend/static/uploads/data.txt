<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Chatbot - Customer Support</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --accent-color: #4895ef;
            --dark-color: #1b263b;
            --light-color: #f8f9fa;
            --success-color: #4cc9f0;
            --danger-color: #f72585;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            height: 100vh;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        header {
            background: white;
            padding: 1rem 2rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
            z-index: 10;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--primary-color);
        }

        .user-info {
            display: flex;
            align-items: center;
        }

        .user-info img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
            background: var(--accent-color);
            padding: 5px;
        }

        .logout-btn {
            background: none;
            border: none;
            color: var(--danger-color);
            cursor: pointer;
            font-size: 14px;
        }

        .container {
            display: flex;
            flex: 1;
            overflow: hidden;
        }

        .sidebar {
            width: 250px;
            background: white;
            padding: 1.5rem;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            overflow-y: auto;
            transform: translateX(0);
            transition: transform 0.3s ease;
        }

        .sidebar.closed {
            transform: translateX(-100%);
        }

        .sidebar-toggle {
            display: none;
            position: absolute;
            top: 70px;
            left: 10px;
            background: white;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            z-index: 20;
        }

        .sidebar-menu {
            list-style: none;
        }

        .sidebar-menu li {
            margin-bottom: 1rem;
        }

        .sidebar-menu a {
            display: flex;
            align-items: center;
            padding: 0.5rem;
            border-radius: 8px;
            color: var(--dark-color);
            text-decoration: none;
            transition: all 0.3s;
        }

        .sidebar-menu a:hover, .sidebar-menu a.active {
            background: rgba(72, 149, 239, 0.1);
            color: var(--primary-color);
        }

        .sidebar-menu i {
            margin-right: 10px;
            font-size: 1.2rem;
        }

        .main-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            padding: 1.5rem;
            overflow-y: auto;
        }

        .chat-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            overflow: hidden;
        }

        .chat-header {
            padding: 1rem;
            background: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
        }

        .chat-header img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
            background: white;
            padding: 5px;
        }

        .chat-messages {
            flex: 1;
            padding: 1.5rem;
            overflow-y: auto;
            background: #f8f9fa;
        }

        .message {
            margin-bottom: 1rem;
            max-width: 70%;
            animation: fadeIn 0.3s;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .user-message {
            margin-left: auto;
            background: var(--primary-color);
            color: white;
            padding: 0.8rem 1.2rem;
            border-radius: 15px 15px 0 15px;
        }

        .bot-message {
            margin-right: auto;
            background: white;
            color: var(--dark-color);
            padding: 0.8rem 1.2rem;
            border-radius: 15px 15px 15px 0;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .message-time {
            display: block;
            font-size: 0.7rem;
            margin-top: 5px;
            opacity: 0.7;
        }

        .chat-input {
            display: flex;
            padding: 1rem;
            background: white;
            border-top: 1px solid #e9ecef;
        }

        .chat-input input {
            flex: 1;
            padding: 0.8rem 1rem;
            border: 2px solid #e9ecef;
            border-radius: 25px;
            font-size: 1rem;
            transition: all 0.3s;
        }

        .chat-input input:focus {
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(72, 149, 239, 0.2);
            outline: none;
        }

        .chat-input button {
            margin-left: 10px;
            background: var(--primary-color);
            color: white;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s;
        }

        .chat-input button:hover {
            background: var(--secondary-color);
            transform: scale(1.05);
        }

        .quick-questions {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 1rem;
        }

        .quick-question {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 20px;
            padding: 0.5rem 1rem;
            font-size: 0.8rem;
            cursor: pointer;
            transition: all 0.3s;
        }

        .quick-question:hover {
            background: var(--light-color);
            border-color: var(--accent-color);
        }

        .typing-indicator {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }

        .typing-dot {
            width: 8px;
            height: 8px;
            background: var(--dark-color);
            border-radius: 50%;
            margin: 0 2px;
            opacity: 0.3;
            animation: typingAnimation 1.4s infinite ease-in-out;
        }

        .typing-dot:nth-child(1) {
            animation-delay: 0s;
        }

        .typing-dot:nth-child(2) {
            animation-delay: 0.2s;
        }

        .typing-dot:nth-child(3) {
            animation-delay: 0.4s;
        }

        @keyframes typingAnimation {
            0%, 60%, 100% { transform: translateY(0); opacity: 0.3; }
            30% { transform: translateY(-5px); opacity: 0.8; }
        }

        /* Responsive styles */
        @media (max-width: 768px) {
            .sidebar {
                position: fixed;
                top: 0;
                left: 0;
                height: 100%;
                z-index: 15;
            }

            .sidebar-toggle {
                display: block;
            }

            .main-content {
                padding: 1rem;
            }

            .message {
                max-width: 85%;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="logo">AI Support Bot</div>
        <div class="user-info">
            <img src="https://ui-avatars.com/api/?name=User" alt="User">
            <button class="logout-btn">Logout</button>
        </div>
    </header>

    <div class="container">
        <button class="sidebar-toggle">
            <i class="fas fa-bars"></i>
        </button>
        
        <div class="sidebar">
            <ul class="sidebar-menu">
                <li>
                    <a href="#" class="active">
                        <i class="fas fa-comments"></i>
                        <span>Chat</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-history"></i>
                        <span>Chat History</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-question-circle"></i>
                        <span>Help</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-info-circle"></i>
                        <span>About</span>
                    </a>
                </li>
                <li>
                    <a href="#">
                        <i class="fas fa-headset"></i>
                        <span>Live Support</span>
                    </a>
                </li>
            </ul>
        </div>

        <div class="main-content">
            <div class="chat-container">
                <div class="chat-header">
                    <img src="https://ui-avatars.com/api/?name=AI+Bot&background=4361ee&color=fff" alt="AI Bot">
                    <h3>AI Support Assistant</h3>
                </div>
                
                <div class="chat-messages" id="chatMessages">
                    <div class="message bot-message">
                        Hello! I'm your AI support assistant. How can I help you today?
                        <span class="message-time">Just now</span>
                    </div>
                </div>
                
                <div class="chat-input">
                    <input type="text" id="userInput" placeholder="Type your message here...">
                    <button id="sendButton">
                        <i class="fas fa-paper-plane"></i>
                    </button>
                </div>
                
                <div class="quick-questions">
                    <div class="quick-question">How do I reset my password?</div>
                    <div class="quick-question">What are your business hours?</div>
                    <div class="quick-question">Where can I find documentation?</div>
                    <div class="quick-question">How do I contact support?</div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // DOM Elements
        const sidebar = document.querySelector('.sidebar');
        const sidebarToggle = document.querySelector('.sidebar-toggle');
        const chatMessages = document.getElementById('chatMessages');
        const userInput = document.getElementById('userInput');
        const sendButton = document.getElementById('sendButton');
        const quickQuestions = document.querySelectorAll('.quick-question');
        const logoutBtn = document.querySelector('.logout-btn');

        // Toggle sidebar on mobile
        sidebarToggle.addEventListener('click', () => {
            sidebar.classList.toggle('closed');
        });

        // Send message function
        const sendMessage = async () => {
            const message = userInput.value.trim();
            if (!message) return;

            // Add user message to chat
            addMessage(message, 'user');

            // Clear input
            userInput.value = '';

            // Show typing indicator
            showTypingIndicator();

            try {
                // Simulate API call with timeout
                setTimeout(() => {
                    // Remove typing indicator
                    removeTypingIndicator();

                    // Generate bot response
                    const botResponse = generateBotResponse(message);
                    addMessage(botResponse, 'bot');
                }, 1500);
            } catch (error) {
                console.error('Error:', error);
                removeTypingIndicator();
                addMessage("I'm having trouble connecting. Please try again later.", 'bot');
            }
        };

        // Add message to chat
        const addMessage = (text, sender) => {
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('message', `${sender}-message`);
            
            const time = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
            messageDiv.innerHTML = `${text} <span class="message-time">${time}</span>`;
            
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        };

        // Show typing indicator
        const showTypingIndicator = () => {
            const typingDiv = document.createElement('div');
            typingDiv.classList.add('typing-indicator');
            typingDiv.id = 'typingIndicator';
            typingDiv.innerHTML = `
                <div class="typing-dot"></div>
                <div class="typing-dot"></div>
                <div class="typing-dot"></div>
                <span style="margin-left: 10px;">AI is typing...</span>
            `;
            chatMessages.appendChild(typingDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        };

        // Remove typing indicator
        const removeTypingIndicator = () => {
            const typingIndicator = document.getElementById('typingIndicator');
            if (typingIndicator) {
                typingIndicator.remove();
            }
        };

        // Generate bot response (simple logic - would be replaced with actual NLP in production)
        const generateBotResponse = (userMessage) => {
            const lowerMessage = userMessage.toLowerCase();
            
            if (lowerMessage.includes('hello') || lowerMessage.includes('hi')) {
                return "Hello there! How can I assist you today?";
            } else if (lowerMessage.includes('password')) {
                return "To reset your password, please visit our password reset page or contact our support team for assistance.";
            } else if (lowerMessage.includes('hours')) {
                return "Our customer support is available 24/7. You can reach us anytime!";
            } else if (lowerMessage.includes('contact')) {
                return "You can contact our support team at support@example.com or call us at +1 (555) 123-4567.";
            } else if (lowerMessage.includes('thank')) {
                return "You're welcome! Is there anything else I can help you with?";
            } else {
                return "I'm sorry, I didn't understand that. Could you please rephrase your question?";
            }
        };

        // Event listeners
        sendButton.addEventListener('click', sendMessage);
        userInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        // Quick question click handler
        quickQuestions.forEach(question => {
            question.addEventListener('click', () => {
                userInput.value = question.textContent;
                sendMessage();
            });
        });

        // Logout handler
        logoutBtn.addEventListener('click', () => {
            localStorage.removeItem('token');
            window.location.href = '/index.html';
        });

        // Check authentication
        // Updated authentication check
document.addEventListener('DOMContentLoaded', async () => {
    const token = localStorage.getItem('token');
    if (!token) {
        window.location.href = '/index.html';
        return;
    }

    // Verify token is still valid
    try {
        const response = await fetch('/api/auth/test', {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });
        
        if (!response.ok) {
            localStorage.removeItem('token');
            window.location.href = '/index.html';
        }
    } catch (error) {
        console.error('Auth check failed:', error);
        localStorage.removeItem('token');
        window.location.href = '/index.html';
    }
});
    </script>
</body>
</html>